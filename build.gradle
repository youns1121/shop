plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    // QueryDSL 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.projectlombok:lombok:1.18.18'
    runtimeOnly 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    //oauth2
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.3.6.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //modelmapper
    implementation 'org.modelmapper:modelmapper:2.3.9'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.6'

    //devtools
    implementation 'org.springframework.boot:spring-boot-devtools:2.5.4'

    //thymeleaf layout dialect
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.5.1'

    //queryDSL
    implementation 'com.querydsl:querydsl-jpa'
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

/** * comileQuerydsl 추가 */
compileQuerydsl {
    if(file(querydslDir).exists() )
        delete(file(querydslDir))
}




test {
    useJUnitPlatform()
}
